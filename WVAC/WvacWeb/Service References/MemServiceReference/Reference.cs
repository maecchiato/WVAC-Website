//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WvacWeb.MemServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="membership", Namespace="http://schemas.datacontract.org/2004/07/WVACWebServer.Models")]
    [System.SerializableAttribute()]
    public partial class membership : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BeginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeOfPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MonthlyDueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MonthsPaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MonthsToPayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SchedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SharesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BeginDate {
            get {
                return this.BeginDateField;
            }
            set {
                if ((this.BeginDateField.Equals(value) != true)) {
                    this.BeginDateField = value;
                    this.RaisePropertyChanged("BeginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModeOfPayment {
            get {
                return this.ModeOfPaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeOfPaymentField, value) != true)) {
                    this.ModeOfPaymentField = value;
                    this.RaisePropertyChanged("ModeOfPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MonthlyDue {
            get {
                return this.MonthlyDueField;
            }
            set {
                if ((this.MonthlyDueField.Equals(value) != true)) {
                    this.MonthlyDueField = value;
                    this.RaisePropertyChanged("MonthlyDue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MonthsPaid {
            get {
                return this.MonthsPaidField;
            }
            set {
                if ((this.MonthsPaidField.Equals(value) != true)) {
                    this.MonthsPaidField = value;
                    this.RaisePropertyChanged("MonthsPaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MonthsToPay {
            get {
                return this.MonthsToPayField;
            }
            set {
                if ((this.MonthsToPayField.Equals(value) != true)) {
                    this.MonthsToPayField = value;
                    this.RaisePropertyChanged("MonthsToPay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SchedDate {
            get {
                return this.SchedDateField;
            }
            set {
                if ((this.SchedDateField.Equals(value) != true)) {
                    this.SchedDateField = value;
                    this.RaisePropertyChanged("SchedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Shares {
            get {
                return this.SharesField;
            }
            set {
                if ((this.SharesField.Equals(value) != true)) {
                    this.SharesField = value;
                    this.RaisePropertyChanged("Shares");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalAmount {
            get {
                return this.TotalAmountField;
            }
            set {
                if ((this.TotalAmountField.Equals(value) != true)) {
                    this.TotalAmountField = value;
                    this.RaisePropertyChanged("TotalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="mempayment", Namespace="http://schemas.datacontract.org/2004/07/WVACWebServer.Models")]
    [System.SerializableAttribute()]
    public partial class mempayment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double amountPaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double cashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double changeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double fineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long memIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime payDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double amountPaid {
            get {
                return this.amountPaidField;
            }
            set {
                if ((this.amountPaidField.Equals(value) != true)) {
                    this.amountPaidField = value;
                    this.RaisePropertyChanged("amountPaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double cash {
            get {
                return this.cashField;
            }
            set {
                if ((this.cashField.Equals(value) != true)) {
                    this.cashField = value;
                    this.RaisePropertyChanged("cash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double change {
            get {
                return this.changeField;
            }
            set {
                if ((this.changeField.Equals(value) != true)) {
                    this.changeField = value;
                    this.RaisePropertyChanged("change");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double fine {
            get {
                return this.fineField;
            }
            set {
                if ((this.fineField.Equals(value) != true)) {
                    this.fineField = value;
                    this.RaisePropertyChanged("fine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long memID {
            get {
                return this.memIDField;
            }
            set {
                if ((this.memIDField.Equals(value) != true)) {
                    this.memIDField = value;
                    this.RaisePropertyChanged("memID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime payDate {
            get {
                return this.payDateField;
            }
            set {
                if ((this.payDateField.Equals(value) != true)) {
                    this.payDateField = value;
                    this.RaisePropertyChanged("payDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MemServiceReference.IMembershipService")]
    public interface IMembershipService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/ConfirmShares", ReplyAction="http://tempuri.org/IMembershipService/ConfirmSharesResponse")]
        bool ConfirmShares(int shares);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/ConfirmShares", ReplyAction="http://tempuri.org/IMembershipService/ConfirmSharesResponse")]
        System.Threading.Tasks.Task<bool> ConfirmSharesAsync(int shares);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/ConfirmPayment", ReplyAction="http://tempuri.org/IMembershipService/ConfirmPaymentResponse")]
        bool ConfirmPayment(double payment, int shares, string mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/ConfirmPayment", ReplyAction="http://tempuri.org/IMembershipService/ConfirmPaymentResponse")]
        System.Threading.Tasks.Task<bool> ConfirmPaymentAsync(double payment, int shares, string mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/CreateMemberIns", ReplyAction="http://tempuri.org/IMembershipService/CreateMemberInsResponse")]
        WvacWeb.MemServiceReference.membership CreateMemberIns(int uID, int shares, string mode, int months, double bal, double monthlyDue, string typeIns);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/CreateMemberIns", ReplyAction="http://tempuri.org/IMembershipService/CreateMemberInsResponse")]
        System.Threading.Tasks.Task<WvacWeb.MemServiceReference.membership> CreateMemberInsAsync(int uID, int shares, string mode, int months, double bal, double monthlyDue, string typeIns);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/CreateMemberLump", ReplyAction="http://tempuri.org/IMembershipService/CreateMemberLumpResponse")]
        WvacWeb.MemServiceReference.membership CreateMemberLump(int userId, int shares, string modeofP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/CreateMemberLump", ReplyAction="http://tempuri.org/IMembershipService/CreateMemberLumpResponse")]
        System.Threading.Tasks.Task<WvacWeb.MemServiceReference.membership> CreateMemberLumpAsync(int userId, int shares, string modeofP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/CreateMember", ReplyAction="http://tempuri.org/IMembershipService/CreateMemberResponse")]
        string CreateMember(string mode, int shares, double payment, int uID, int months, double bal, double monthlyDue, string typeIns);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/CreateMember", ReplyAction="http://tempuri.org/IMembershipService/CreateMemberResponse")]
        System.Threading.Tasks.Task<string> CreateMemberAsync(string mode, int shares, double payment, int uID, int months, double bal, double monthlyDue, string typeIns);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/getBalance", ReplyAction="http://tempuri.org/IMembershipService/getBalanceResponse")]
        double getBalance(string mode, int shares, double dPayment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/getBalance", ReplyAction="http://tempuri.org/IMembershipService/getBalanceResponse")]
        System.Threading.Tasks.Task<double> getBalanceAsync(string mode, int shares, double dPayment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/CalculateMonth", ReplyAction="http://tempuri.org/IMembershipService/CalculateMonthResponse")]
        int CalculateMonth(string typeIns);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/CalculateMonth", ReplyAction="http://tempuri.org/IMembershipService/CalculateMonthResponse")]
        System.Threading.Tasks.Task<int> CalculateMonthAsync(string typeIns);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/getBill", ReplyAction="http://tempuri.org/IMembershipService/getBillResponse")]
        double getBill(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/getBill", ReplyAction="http://tempuri.org/IMembershipService/getBillResponse")]
        System.Threading.Tasks.Task<double> getBillAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/getFine", ReplyAction="http://tempuri.org/IMembershipService/getFineResponse")]
        double getFine(int id, System.DateTime payDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/getFine", ReplyAction="http://tempuri.org/IMembershipService/getFineResponse")]
        System.Threading.Tasks.Task<double> getFineAsync(int id, System.DateTime payDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/GetPayment", ReplyAction="http://tempuri.org/IMembershipService/GetPaymentResponse")]
        string GetPayment(int id, System.DateTime payDate, double fine, double payment, double cash, double change);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/GetPayment", ReplyAction="http://tempuri.org/IMembershipService/GetPaymentResponse")]
        System.Threading.Tasks.Task<string> GetPaymentAsync(int id, System.DateTime payDate, double fine, double payment, double cash, double change);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/CreatePayment", ReplyAction="http://tempuri.org/IMembershipService/CreatePaymentResponse")]
        WvacWeb.MemServiceReference.mempayment CreatePayment(int id, System.DateTime payDate, double fine, double payment, double cash, double change);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/CreatePayment", ReplyAction="http://tempuri.org/IMembershipService/CreatePaymentResponse")]
        System.Threading.Tasks.Task<WvacWeb.MemServiceReference.mempayment> CreatePaymentAsync(int id, System.DateTime payDate, double fine, double payment, double cash, double change);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/ViewMembership", ReplyAction="http://tempuri.org/IMembershipService/ViewMembershipResponse")]
        string ViewMembership(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/ViewMembership", ReplyAction="http://tempuri.org/IMembershipService/ViewMembershipResponse")]
        System.Threading.Tasks.Task<string> ViewMembershipAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/GetRecords", ReplyAction="http://tempuri.org/IMembershipService/GetRecordsResponse")]
        string GetRecords(int memID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/GetRecords", ReplyAction="http://tempuri.org/IMembershipService/GetRecordsResponse")]
        System.Threading.Tasks.Task<string> GetRecordsAsync(int memID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/ViewAllMembership", ReplyAction="http://tempuri.org/IMembershipService/ViewAllMembershipResponse")]
        string ViewAllMembership();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMembershipService/ViewAllMembership", ReplyAction="http://tempuri.org/IMembershipService/ViewAllMembershipResponse")]
        System.Threading.Tasks.Task<string> ViewAllMembershipAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMembershipServiceChannel : WvacWeb.MemServiceReference.IMembershipService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MembershipServiceClient : System.ServiceModel.ClientBase<WvacWeb.MemServiceReference.IMembershipService>, WvacWeb.MemServiceReference.IMembershipService {
        
        public MembershipServiceClient() {
        }
        
        public MembershipServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MembershipServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MembershipServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MembershipServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ConfirmShares(int shares) {
            return base.Channel.ConfirmShares(shares);
        }
        
        public System.Threading.Tasks.Task<bool> ConfirmSharesAsync(int shares) {
            return base.Channel.ConfirmSharesAsync(shares);
        }
        
        public bool ConfirmPayment(double payment, int shares, string mode) {
            return base.Channel.ConfirmPayment(payment, shares, mode);
        }
        
        public System.Threading.Tasks.Task<bool> ConfirmPaymentAsync(double payment, int shares, string mode) {
            return base.Channel.ConfirmPaymentAsync(payment, shares, mode);
        }
        
        public WvacWeb.MemServiceReference.membership CreateMemberIns(int uID, int shares, string mode, int months, double bal, double monthlyDue, string typeIns) {
            return base.Channel.CreateMemberIns(uID, shares, mode, months, bal, monthlyDue, typeIns);
        }
        
        public System.Threading.Tasks.Task<WvacWeb.MemServiceReference.membership> CreateMemberInsAsync(int uID, int shares, string mode, int months, double bal, double monthlyDue, string typeIns) {
            return base.Channel.CreateMemberInsAsync(uID, shares, mode, months, bal, monthlyDue, typeIns);
        }
        
        public WvacWeb.MemServiceReference.membership CreateMemberLump(int userId, int shares, string modeofP) {
            return base.Channel.CreateMemberLump(userId, shares, modeofP);
        }
        
        public System.Threading.Tasks.Task<WvacWeb.MemServiceReference.membership> CreateMemberLumpAsync(int userId, int shares, string modeofP) {
            return base.Channel.CreateMemberLumpAsync(userId, shares, modeofP);
        }
        
        public string CreateMember(string mode, int shares, double payment, int uID, int months, double bal, double monthlyDue, string typeIns) {
            return base.Channel.CreateMember(mode, shares, payment, uID, months, bal, monthlyDue, typeIns);
        }
        
        public System.Threading.Tasks.Task<string> CreateMemberAsync(string mode, int shares, double payment, int uID, int months, double bal, double monthlyDue, string typeIns) {
            return base.Channel.CreateMemberAsync(mode, shares, payment, uID, months, bal, monthlyDue, typeIns);
        }
        
        public double getBalance(string mode, int shares, double dPayment) {
            return base.Channel.getBalance(mode, shares, dPayment);
        }
        
        public System.Threading.Tasks.Task<double> getBalanceAsync(string mode, int shares, double dPayment) {
            return base.Channel.getBalanceAsync(mode, shares, dPayment);
        }
        
        public int CalculateMonth(string typeIns) {
            return base.Channel.CalculateMonth(typeIns);
        }
        
        public System.Threading.Tasks.Task<int> CalculateMonthAsync(string typeIns) {
            return base.Channel.CalculateMonthAsync(typeIns);
        }
        
        public double getBill(int id) {
            return base.Channel.getBill(id);
        }
        
        public System.Threading.Tasks.Task<double> getBillAsync(int id) {
            return base.Channel.getBillAsync(id);
        }
        
        public double getFine(int id, System.DateTime payDate) {
            return base.Channel.getFine(id, payDate);
        }
        
        public System.Threading.Tasks.Task<double> getFineAsync(int id, System.DateTime payDate) {
            return base.Channel.getFineAsync(id, payDate);
        }
        
        public string GetPayment(int id, System.DateTime payDate, double fine, double payment, double cash, double change) {
            return base.Channel.GetPayment(id, payDate, fine, payment, cash, change);
        }
        
        public System.Threading.Tasks.Task<string> GetPaymentAsync(int id, System.DateTime payDate, double fine, double payment, double cash, double change) {
            return base.Channel.GetPaymentAsync(id, payDate, fine, payment, cash, change);
        }
        
        public WvacWeb.MemServiceReference.mempayment CreatePayment(int id, System.DateTime payDate, double fine, double payment, double cash, double change) {
            return base.Channel.CreatePayment(id, payDate, fine, payment, cash, change);
        }
        
        public System.Threading.Tasks.Task<WvacWeb.MemServiceReference.mempayment> CreatePaymentAsync(int id, System.DateTime payDate, double fine, double payment, double cash, double change) {
            return base.Channel.CreatePaymentAsync(id, payDate, fine, payment, cash, change);
        }
        
        public string ViewMembership(int id) {
            return base.Channel.ViewMembership(id);
        }
        
        public System.Threading.Tasks.Task<string> ViewMembershipAsync(int id) {
            return base.Channel.ViewMembershipAsync(id);
        }
        
        public string GetRecords(int memID) {
            return base.Channel.GetRecords(memID);
        }
        
        public System.Threading.Tasks.Task<string> GetRecordsAsync(int memID) {
            return base.Channel.GetRecordsAsync(memID);
        }
        
        public string ViewAllMembership() {
            return base.Channel.ViewAllMembership();
        }
        
        public System.Threading.Tasks.Task<string> ViewAllMembershipAsync() {
            return base.Channel.ViewAllMembershipAsync();
        }
    }
}
